plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	
	maven { url 'https://api.modrinth.com/maven' } 
	
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
	
	maven {
        name "KosmX's maven"
        url 'https://maven.kosmx.dev/'
    }

	maven {
		//botania + patchouli
		url = "https://maven.blamejared.com/"
	}

	maven {
		name = 'ParchmentMC'
		url = 'https://maven.parchmentmc.org'
	}

	//fabricshieldlib requirements
	maven { url = 'https://jitpack.io' }
	maven {url = 'https://jitpack.io'}
	maven {url "https://maven.terraformersmc.com/releases/"}
	maven {url = "https://api.modrinth.com/maven"}

}

loom {
    splitEnvironmentSourceSets()

	mods {
		"botaniacombat" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	modImplementation "maven.modrinth:better-combat:${project.better_combat}"
	
	modApi "me.shedaniel.cloth:cloth-config-fabric:11.1.106"

    include modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim}")

	modImplementation "vazkii.botania:Botania-xplat:${project.botania_version}"

	modImplementation "com.github.CrimsonDawn45:Fabric-Shield-Lib:v${project.fabric_shield_lib_version}"
	modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"
	modImplementation "maven.modrinth:midnightlib:${project.midnightlib_version}"
	modImplementation "com.github.Chocohead:Fabric-ASM:v${project.fabricasm_version}"

	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.20.1:2023.09.03@zip")
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}